; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\timer_deal.o --asm_dir=..\LISTING\ --list_dir=..\LISTING\ --depend=.\timer_deal.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I..\inc_h -IC:\ti\TivaWare_C_Series-2.1.0.12573\inc -IC:\ti\TivaWare_C_Series-2.1.0.12573\utils -IC:\ti\TivaWare_C_Series-2.1.0.12573\grlib -IC:\ti\TivaWare_C_Series-2.1.0.12573\IQmath -IC:\ti\TivaWare_C_Series-2.1.0.12573\nfclib -IC:\ti\TivaWare_C_Series-2.1.0.12573\driverlib -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\TI\TM4C123 -Drvmdk -DPART_TM4C123GH6PM -DTARGET_IS_TM4C123_RA3 -DTM4C123GH6PM --omf_browse=.\timer_deal.crf ..\DEAL\Timer_Deal.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Timer0AHandler PROC
;;;9      ************************************************/
;;;10     void Timer0AHandler(void)
000000  b510              PUSH     {r4,lr}
;;;11     {
;;;12     	TimerIntClear(TIMER0_BASE, TIMER_TIMA_TIMEOUT);
000002  2101              MOVS     r1,#1
000004  48e1              LDR      r0,|L1.908|
000006  f7fffffe          BL       TimerIntClear
;;;13     	MotorTime_Pulse1 = 1;    //通知 main() 软启停
00000a  48e1              LDR      r0,|L1.912|
00000c  6800              LDR      r0,[r0,#0]  ; Flagbits
00000e  f0200001          BIC      r0,r0,#1
000012  1c40              ADDS     r0,r0,#1
000014  49de              LDR      r1,|L1.912|
000016  6008              STR      r0,[r1,#0]  ; Flagbits
;;;14     	if(Motor_reversal1 == 0)
000018  4608              MOV      r0,r1
00001a  7800              LDRB     r0,[r0,#0]  ; Flagbits
00001c  f3c00080          UBFX     r0,r0,#2,#1
000020  b978              CBNZ     r0,|L1.66|
;;;15     	{		
;;;16     		M1_Pulse_High;
000022  f04f7080          MOV      r0,#0x1000000
000026  6a00              LDR      r0,[r0,#0x20]
000028  2280              MOVS     r2,#0x80
00002a  4611              MOV      r1,r2
00002c  6803              LDR      r3,[r0,#0]
00002e  48d9              LDR      r0,|L1.916|
000030  4798              BLX      r3
;;;17     		Motor_reversal1 = 1;						 
000032  48d7              LDR      r0,|L1.912|
000034  6800              LDR      r0,[r0,#0]  ; Flagbits
000036  f0200004          BIC      r0,r0,#4
00003a  1d00              ADDS     r0,r0,#4
00003c  49d4              LDR      r1,|L1.912|
00003e  6008              STR      r0,[r1,#0]  ; Flagbits
000040  e017              B        |L1.114|
                  |L1.66|
;;;18     	}
;;;19     	else if(Motor_reversal1 == 1)
000042  48d3              LDR      r0,|L1.912|
000044  7800              LDRB     r0,[r0,#0]  ; Flagbits
000046  f3c00080          UBFX     r0,r0,#2,#1
00004a  b190              CBZ      r0,|L1.114|
;;;20     	{
;;;21     		M1_Pulse_Low; 
00004c  f04f7080          MOV      r0,#0x1000000
000050  6a00              LDR      r0,[r0,#0x20]
000052  2200              MOVS     r2,#0
000054  2180              MOVS     r1,#0x80
000056  6803              LDR      r3,[r0,#0]
000058  48ce              LDR      r0,|L1.916|
00005a  4798              BLX      r3
;;;22     		Motor_reversal1 = 0;
00005c  48cc              LDR      r0,|L1.912|
00005e  6800              LDR      r0,[r0,#0]  ; Flagbits
000060  f0200004          BIC      r0,r0,#4
000064  49ca              LDR      r1,|L1.912|
000066  6008              STR      r0,[r1,#0]  ; Flagbits
;;;23     		Step_Num_Cur1.word ++; // 步数自增
000068  48cb              LDR      r0,|L1.920|
00006a  8800              LDRH     r0,[r0,#0]  ; Step_Num_Cur1
00006c  1c40              ADDS     r0,r0,#1
00006e  49ca              LDR      r1,|L1.920|
000070  8008              STRH     r0,[r1,#0]
                  |L1.114|
;;;24     	}
;;;25     	
;;;26     }  
000072  bd10              POP      {r4,pc}
;;;27     void Timer1AHandler(void)
                          ENDP

                  Timer1AHandler PROC
000074  b510              PUSH     {r4,lr}
;;;28     {
;;;29     	TimerIntClear(TIMER1_BASE, TIMER_TIMA_TIMEOUT);
000076  2101              MOVS     r1,#1
000078  48c8              LDR      r0,|L1.924|
00007a  f7fffffe          BL       TimerIntClear
;;;30     	MotorTime_Pulse2 = 1;    //通知 main() 软启停
00007e  48c4              LDR      r0,|L1.912|
000080  6800              LDR      r0,[r0,#0]  ; Flagbits
000082  f0200002          BIC      r0,r0,#2
000086  1c80              ADDS     r0,r0,#2
000088  49c1              LDR      r1,|L1.912|
00008a  6008              STR      r0,[r1,#0]  ; Flagbits
;;;31     	if(Motor_reversal2 == 0)
00008c  4608              MOV      r0,r1
00008e  7800              LDRB     r0,[r0,#0]  ; Flagbits
000090  f3c000c0          UBFX     r0,r0,#3,#1
000094  b978              CBNZ     r0,|L1.182|
;;;32     	{
;;;33     		M2_Pulse_High;
000096  f04f7080          MOV      r0,#0x1000000
00009a  6a00              LDR      r0,[r0,#0x20]
00009c  2202              MOVS     r2,#2
00009e  4611              MOV      r1,r2
0000a0  6803              LDR      r3,[r0,#0]
0000a2  48bf              LDR      r0,|L1.928|
0000a4  4798              BLX      r3
;;;34     		Motor_reversal2 = 1;						 
0000a6  48ba              LDR      r0,|L1.912|
0000a8  6800              LDR      r0,[r0,#0]  ; Flagbits
0000aa  f0200008          BIC      r0,r0,#8
0000ae  3008              ADDS     r0,r0,#8
0000b0  49b7              LDR      r1,|L1.912|
0000b2  6008              STR      r0,[r1,#0]  ; Flagbits
0000b4  e017              B        |L1.230|
                  |L1.182|
;;;35     	}
;;;36     	else if(Motor_reversal2 == 1)
0000b6  48b6              LDR      r0,|L1.912|
0000b8  7800              LDRB     r0,[r0,#0]  ; Flagbits
0000ba  f3c000c0          UBFX     r0,r0,#3,#1
0000be  b190              CBZ      r0,|L1.230|
;;;37     	{
;;;38     		M2_Pulse_Low; 
0000c0  f04f7080          MOV      r0,#0x1000000
0000c4  6a00              LDR      r0,[r0,#0x20]
0000c6  2200              MOVS     r2,#0
0000c8  2102              MOVS     r1,#2
0000ca  6803              LDR      r3,[r0,#0]
0000cc  48b4              LDR      r0,|L1.928|
0000ce  4798              BLX      r3
;;;39     		Motor_reversal2 = 0;
0000d0  48af              LDR      r0,|L1.912|
0000d2  6800              LDR      r0,[r0,#0]  ; Flagbits
0000d4  f0200008          BIC      r0,r0,#8
0000d8  49ad              LDR      r1,|L1.912|
0000da  6008              STR      r0,[r1,#0]  ; Flagbits
;;;40     		Step_Num_Cur2.word ++; // 步数自增
0000dc  48b1              LDR      r0,|L1.932|
0000de  8800              LDRH     r0,[r0,#0]  ; Step_Num_Cur2
0000e0  1c40              ADDS     r0,r0,#1
0000e2  49b0              LDR      r1,|L1.932|
0000e4  8008              STRH     r0,[r1,#0]
                  |L1.230|
;;;41     	}  
;;;42     }
0000e6  bd10              POP      {r4,pc}
;;;43     
                          ENDP

                  Timer2AHandler PROC
;;;52     static uint8_t can1StartSend[8];
;;;53     void Timer2AHandler(void)
0000e8  b510              PUSH     {r4,lr}
;;;54     {
;;;55     	
;;;56     	
;;;57     	static uint16_t  Timer2_cnt = 0;
;;;58     	static uint8_t   start_cnt = 0;
;;;59     	TimerIntClear(TIMER2_BASE, TIMER_TIMA_TIMEOUT);
0000ea  2101              MOVS     r1,#1
0000ec  48ae              LDR      r0,|L1.936|
0000ee  f7fffffe          BL       TimerIntClear
;;;60     
;;;61     	Timer2_cnt ++;
0000f2  48ae              LDR      r0,|L1.940|
0000f4  8800              LDRH     r0,[r0,#0]  ; Timer2_cnt
0000f6  1c40              ADDS     r0,r0,#1
0000f8  49ac              LDR      r1,|L1.940|
0000fa  8008              STRH     r0,[r1,#0]
;;;62     	if(Timer2_cnt >= 40&&(Drive_Limit_Time == 0))//延时40ms使能驱动
0000fc  4608              MOV      r0,r1
0000fe  8800              LDRH     r0,[r0,#0]  ; Timer2_cnt
000100  2828              CMP      r0,#0x28
000102  db1c              BLT      |L1.318|
000104  48a2              LDR      r0,|L1.912|
000106  8800              LDRH     r0,[r0,#0]  ; Flagbits
000108  f3c03000          UBFX     r0,r0,#12,#1
00010c  b9b8              CBNZ     r0,|L1.318|
;;;63     	{
;;;64     		Drive_Limit_Time=1;
00010e  48a0              LDR      r0,|L1.912|
000110  6800              LDR      r0,[r0,#0]  ; Flagbits
000112  f4205080          BIC      r0,r0,#0x1000
000116  f5005080          ADD      r0,r0,#0x1000
00011a  499d              LDR      r1,|L1.912|
00011c  6008              STR      r0,[r1,#0]  ; Flagbits
;;;65     		M1_Enable;
00011e  f04f7080          MOV      r0,#0x1000000
000122  6a00              LDR      r0,[r0,#0x20]
000124  2200              MOVS     r2,#0
000126  2120              MOVS     r1,#0x20
000128  6803              LDR      r3,[r0,#0]
00012a  48a1              LDR      r0,|L1.944|
00012c  4798              BLX      r3
;;;66     		M2_Enable;
00012e  f04f7080          MOV      r0,#0x1000000
000132  6a00              LDR      r0,[r0,#0x20]
000134  2200              MOVS     r2,#0
000136  2101              MOVS     r1,#1
000138  6803              LDR      r3,[r0,#0]
00013a  4899              LDR      r0,|L1.928|
00013c  4798              BLX      r3
                  |L1.318|
;;;67     	}//电机 1 软启动阶段
;;;68     	if((M_SS_Fre_start1 == 1)&&(M_ss_cnt1 < SOFT_FRE_START_NUM1)&&\
00013e  4894              LDR      r0,|L1.912|
000140  8800              LDRH     r0,[r0,#0]  ; Flagbits
000142  f3c03080          UBFX     r0,r0,#14,#1
000146  b380              CBZ      r0,|L1.426|
000148  489a              LDR      r0,|L1.948|
00014a  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt1
00014c  f5b07f96          CMP      r0,#0x12c
000150  da2b              BGE      |L1.426|
;;;69     			   (Timer2_cnt % SOFT_FRE_START_TIME1 == 0))
000152  2000              MOVS     r0,#0
000154  4280              CMP      r0,r0
000156  d128              BNE      |L1.426|
;;;70     	{
;;;71     		motor_ss1 = motor_ss1 +  Fre_Fuzhi11;
000158  4897              LDR      r0,|L1.952|
00015a  8800              LDRH     r0,[r0,#0]  ; motor_ss1
00015c  4997              LDR      r1,|L1.956|
00015e  8809              LDRH     r1,[r1,#0]  ; Fre_Fuzhi11
000160  4408              ADD      r0,r0,r1
000162  4995              LDR      r1,|L1.952|
000164  8008              STRH     r0,[r1,#0]
;;;72     		M_ss_cnt1 ++;
000166  4893              LDR      r0,|L1.948|
000168  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt1
00016a  1c40              ADDS     r0,r0,#1
00016c  4991              LDR      r1,|L1.948|
00016e  8008              STRH     r0,[r1,#0]
;;;73     		Timer_Send_Fre1 = 1;
000170  4887              LDR      r0,|L1.912|
000172  6800              LDR      r0,[r0,#0]  ; Flagbits
000174  f4205000          BIC      r0,r0,#0x2000
000178  f5005000          ADD      r0,r0,#0x2000
00017c  4984              LDR      r1,|L1.912|
00017e  6008              STR      r0,[r1,#0]  ; Flagbits
;;;74     		if((motor_ss1 >= Given_Fre1.word)||(M_ss_cnt1 >= SOFT_FRE_START_NUM1))
000180  488f              LDR      r0,|L1.960|
000182  8800              LDRH     r0,[r0,#0]  ; Given_Fre1
000184  498c              LDR      r1,|L1.952|
000186  8809              LDRH     r1,[r1,#0]  ; motor_ss1
000188  4288              CMP      r0,r1
00018a  dd04              BLE      |L1.406|
00018c  4889              LDR      r0,|L1.948|
00018e  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt1
000190  f5b07f96          CMP      r0,#0x12c
000194  db09              BLT      |L1.426|
                  |L1.406|
;;;75     		{
;;;76     			motor_ss1 = Given_Fre1.word;
000196  488a              LDR      r0,|L1.960|
000198  8800              LDRH     r0,[r0,#0]  ; Given_Fre1
00019a  4987              LDR      r1,|L1.952|
00019c  8008              STRH     r0,[r1,#0]
;;;77     			M_SS_Fre_start1 = 0;
00019e  487c              LDR      r0,|L1.912|
0001a0  6800              LDR      r0,[r0,#0]  ; Flagbits
0001a2  f4204080          BIC      r0,r0,#0x4000
0001a6  497a              LDR      r1,|L1.912|
0001a8  6008              STR      r0,[r1,#0]  ; Flagbits
                  |L1.426|
;;;78     		}	
;;;79     	}//电机 1 软停止阶段
;;;80     	if((M_SS_Fre_stop1 == 1)&&(M_ss_cnt1 > 0)&&\
0001aa  4879              LDR      r0,|L1.912|
0001ac  8800              LDRH     r0,[r0,#0]  ; Flagbits
0001ae  f3c030c0          UBFX     r0,r0,#15,#1
0001b2  b360              CBZ      r0,|L1.526|
0001b4  487f              LDR      r0,|L1.948|
0001b6  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt1
0001b8  2800              CMP      r0,#0
0001ba  dd28              BLE      |L1.526|
;;;81     		(Timer2_cnt % SOFT_FRE_STOP_TIME1 == 0))
0001bc  2000              MOVS     r0,#0
0001be  4280              CMP      r0,r0
0001c0  d125              BNE      |L1.526|
;;;82     	{
;;;83     		motor_ss1 = motor_ss1 - Fre_Fuzhi12;
0001c2  487d              LDR      r0,|L1.952|
0001c4  8800              LDRH     r0,[r0,#0]  ; motor_ss1
0001c6  497f              LDR      r1,|L1.964|
0001c8  8809              LDRH     r1,[r1,#0]  ; Fre_Fuzhi12
0001ca  1a40              SUBS     r0,r0,r1
0001cc  497a              LDR      r1,|L1.952|
0001ce  8008              STRH     r0,[r1,#0]
;;;84     		Timer_Send_Fre1 = 1;
0001d0  486f              LDR      r0,|L1.912|
0001d2  6800              LDR      r0,[r0,#0]  ; Flagbits
0001d4  f4205000          BIC      r0,r0,#0x2000
0001d8  f5005000          ADD      r0,r0,#0x2000
0001dc  496c              LDR      r1,|L1.912|
0001de  6008              STR      r0,[r1,#0]  ; Flagbits
;;;85     		M_ss_cnt1 --;
0001e0  4874              LDR      r0,|L1.948|
0001e2  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt1
0001e4  1e40              SUBS     r0,r0,#1
0001e6  4973              LDR      r1,|L1.948|
0001e8  8008              STRH     r0,[r1,#0]
;;;86     		if(motor_ss1 < SOFT_FRE_STOP_MIN1)
0001ea  4873              LDR      r0,|L1.952|
0001ec  8800              LDRH     r0,[r0,#0]  ; motor_ss1
0001ee  f5b07f7a          CMP      r0,#0x3e8
0001f2  da0c              BGE      |L1.526|
;;;87     		{
;;;88     			motor_ss1 = SOFT_FRE_STOP_MIN1;
0001f4  f44f707a          MOV      r0,#0x3e8
0001f8  496f              LDR      r1,|L1.952|
0001fa  8008              STRH     r0,[r1,#0]
;;;89     			M_SS_Fre_stop1 = 0;	
0001fc  4864              LDR      r0,|L1.912|
0001fe  6800              LDR      r0,[r0,#0]  ; Flagbits
000200  f4204000          BIC      r0,r0,#0x8000
000204  4962              LDR      r1,|L1.912|
000206  6008              STR      r0,[r1,#0]  ; Flagbits
;;;90     			M_ss_cnt1 = 0;
000208  2000              MOVS     r0,#0
00020a  496a              LDR      r1,|L1.948|
00020c  8008              STRH     r0,[r1,#0]
                  |L1.526|
;;;91     		}		
;;;92     	}//电机 2 软启动阶段
;;;93     	if((M_SS_Fre_start2 == 1)&&(M_ss_cnt2 < SOFT_FRE_START_NUM2)&&\
00020e  4860              LDR      r0,|L1.912|
000210  6800              LDR      r0,[r0,#0]  ; Flagbits
000212  f3c04040          UBFX     r0,r0,#17,#1
000216  b380              CBZ      r0,|L1.634|
000218  486b              LDR      r0,|L1.968|
00021a  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt2
00021c  f5b07f96          CMP      r0,#0x12c
000220  da2b              BGE      |L1.634|
;;;94     		(Timer2_cnt % SOFT_FRE_START_TIME2 == 0))
000222  2000              MOVS     r0,#0
000224  4280              CMP      r0,r0
000226  d128              BNE      |L1.634|
;;;95     	{
;;;96     		motor_ss2 = motor_ss2 +  Fre_Fuzhi21;
000228  4868              LDR      r0,|L1.972|
00022a  8800              LDRH     r0,[r0,#0]  ; motor_ss2
00022c  4968              LDR      r1,|L1.976|
00022e  8809              LDRH     r1,[r1,#0]  ; Fre_Fuzhi21
000230  4408              ADD      r0,r0,r1
000232  4966              LDR      r1,|L1.972|
000234  8008              STRH     r0,[r1,#0]
;;;97     		M_ss_cnt2 ++;
000236  4864              LDR      r0,|L1.968|
000238  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt2
00023a  1c40              ADDS     r0,r0,#1
00023c  4962              LDR      r1,|L1.968|
00023e  8008              STRH     r0,[r1,#0]
;;;98     		Timer_Send_Fre2 = 1;
000240  4853              LDR      r0,|L1.912|
000242  6800              LDR      r0,[r0,#0]  ; Flagbits
000244  f4203080          BIC      r0,r0,#0x10000
000248  f5003080          ADD      r0,r0,#0x10000
00024c  4950              LDR      r1,|L1.912|
00024e  6008              STR      r0,[r1,#0]  ; Flagbits
;;;99     		if((motor_ss2 >= Given_Fre2.word)||(M_ss_cnt2 >= SOFT_FRE_START_NUM2))
000250  4860              LDR      r0,|L1.980|
000252  8800              LDRH     r0,[r0,#0]  ; Given_Fre2
000254  495d              LDR      r1,|L1.972|
000256  8809              LDRH     r1,[r1,#0]  ; motor_ss2
000258  4288              CMP      r0,r1
00025a  dd04              BLE      |L1.614|
00025c  485a              LDR      r0,|L1.968|
00025e  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt2
000260  f5b07f96          CMP      r0,#0x12c
000264  db09              BLT      |L1.634|
                  |L1.614|
;;;100    		{
;;;101    			motor_ss2 = Given_Fre2.word ;
000266  485b              LDR      r0,|L1.980|
000268  8800              LDRH     r0,[r0,#0]  ; Given_Fre2
00026a  4958              LDR      r1,|L1.972|
00026c  8008              STRH     r0,[r1,#0]
;;;102    			M_SS_Fre_start2 = 0;
00026e  4848              LDR      r0,|L1.912|
000270  6800              LDR      r0,[r0,#0]  ; Flagbits
000272  f4203000          BIC      r0,r0,#0x20000
000276  4946              LDR      r1,|L1.912|
000278  6008              STR      r0,[r1,#0]  ; Flagbits
                  |L1.634|
;;;103    		}
;;;104    	}//电机 2 软停止阶段
;;;105    	if((M_SS_Fre_stop2 == 1)&&(M_ss_cnt2 > 0)&&\
00027a  4845              LDR      r0,|L1.912|
00027c  6800              LDR      r0,[r0,#0]  ; Flagbits
00027e  f3c04080          UBFX     r0,r0,#18,#1
000282  b360              CBZ      r0,|L1.734|
000284  4850              LDR      r0,|L1.968|
000286  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt2
000288  2800              CMP      r0,#0
00028a  dd28              BLE      |L1.734|
;;;106    		(Timer2_cnt % SOFT_FRE_STOP_TIME2 == 0))
00028c  2000              MOVS     r0,#0
00028e  4280              CMP      r0,r0
000290  d125              BNE      |L1.734|
;;;107    	{
;;;108    		motor_ss2 = motor_ss2 - Fre_Fuzhi22;
000292  484e              LDR      r0,|L1.972|
000294  8800              LDRH     r0,[r0,#0]  ; motor_ss2
000296  4950              LDR      r1,|L1.984|
000298  8809              LDRH     r1,[r1,#0]  ; Fre_Fuzhi22
00029a  1a40              SUBS     r0,r0,r1
00029c  494b              LDR      r1,|L1.972|
00029e  8008              STRH     r0,[r1,#0]
;;;109    		Timer_Send_Fre2 = 1;
0002a0  483b              LDR      r0,|L1.912|
0002a2  6800              LDR      r0,[r0,#0]  ; Flagbits
0002a4  f4203080          BIC      r0,r0,#0x10000
0002a8  f5003080          ADD      r0,r0,#0x10000
0002ac  4938              LDR      r1,|L1.912|
0002ae  6008              STR      r0,[r1,#0]  ; Flagbits
;;;110    		M_ss_cnt2 --;
0002b0  4845              LDR      r0,|L1.968|
0002b2  8800              LDRH     r0,[r0,#0]  ; M_ss_cnt2
0002b4  1e40              SUBS     r0,r0,#1
0002b6  4944              LDR      r1,|L1.968|
0002b8  8008              STRH     r0,[r1,#0]
;;;111    		if(motor_ss2 < SOFT_FRE_STOP_MIN2)
0002ba  4844              LDR      r0,|L1.972|
0002bc  8800              LDRH     r0,[r0,#0]  ; motor_ss2
0002be  f5b07f7a          CMP      r0,#0x3e8
0002c2  da0c              BGE      |L1.734|
;;;112    		{
;;;113    			motor_ss2 = SOFT_FRE_STOP_MIN2;
0002c4  f44f707a          MOV      r0,#0x3e8
0002c8  4940              LDR      r1,|L1.972|
0002ca  8008              STRH     r0,[r1,#0]
;;;114    			M_SS_Fre_stop2 = 0;	
0002cc  4830              LDR      r0,|L1.912|
0002ce  6800              LDR      r0,[r0,#0]  ; Flagbits
0002d0  f4202080          BIC      r0,r0,#0x40000
0002d4  492e              LDR      r1,|L1.912|
0002d6  6008              STR      r0,[r1,#0]  ; Flagbits
;;;115    			M_ss_cnt2 = 0;
0002d8  2000              MOVS     r0,#0
0002da  493b              LDR      r1,|L1.968|
0002dc  8008              STRH     r0,[r1,#0]
                  |L1.734|
;;;116    		}		
;;;117    	}
;;;118    	if(Timer2_cnt%500 == 0)       //1s
0002de  4833              LDR      r0,|L1.940|
0002e0  8800              LDRH     r0,[r0,#0]  ; Timer2_cnt
0002e2  f44f71fa          MOV      r1,#0x1f4
0002e6  fb90f2f1          SDIV     r2,r0,r1
0002ea  fb010012          MLS      r0,r1,r2,r0
0002ee  2800              CMP      r0,#0
0002f0  d14a              BNE      |L1.904|
;;;119    	{
;;;120    		//发送状态信息
;;;121    		if((Cmd_55_Flag == 0) && (start_cnt < 20))
0002f2  4827              LDR      r0,|L1.912|
0002f4  8800              LDRH     r0,[r0,#0]  ; Flagbits
0002f6  f3c02080          UBFX     r0,r0,#10,#1
0002fa  bb08              CBNZ     r0,|L1.832|
0002fc  4837              LDR      r0,|L1.988|
0002fe  7800              LDRB     r0,[r0,#0]  ; start_cnt
000300  2814              CMP      r0,#0x14
000302  da1d              BGE      |L1.832|
;;;122    		{
;;;123    			can1StartSend[0] = 0x01; 
000304  2001              MOVS     r0,#1
000306  4936              LDR      r1,|L1.992|
000308  7008              STRB     r0,[r1,#0]
;;;124    			can1StartSend[1] = 0x55;
00030a  2055              MOVS     r0,#0x55
00030c  7048              STRB     r0,[r1,#1]
;;;125    			can1StartSend[2] = M1_state.byte;
00030e  4835              LDR      r0,|L1.996|
000310  7800              LDRB     r0,[r0,#0]  ; M1_state
000312  7088              STRB     r0,[r1,#2]
;;;126    			can1StartSend[3] = M2_state.byte;
000314  4834              LDR      r0,|L1.1000|
000316  7800              LDRB     r0,[r0,#0]  ; M2_state
000318  70c8              STRB     r0,[r1,#3]
;;;127    			can1StartSend[4] = HARDWAREVERSION;
00031a  2014              MOVS     r0,#0x14
00031c  7108              STRB     r0,[r1,#4]
;;;128    			can1StartSend[5] = (uint8_t)(SOFTWAREVERSION>>8);
00031e  2000              MOVS     r0,#0
000320  7148              STRB     r0,[r1,#5]
;;;129    			can1StartSend[6] = (uint8_t)(SOFTWAREVERSION&0x00FF);
000322  2014              MOVS     r0,#0x14
000324  7188              STRB     r0,[r1,#6]
;;;130    			can1StartSend[7] = 0x00;						
000326  2000              MOVS     r0,#0
000328  71c8              STRB     r0,[r1,#7]
;;;131    			Can1DatasSend(can1StartSend,8,0x100);
00032a  f44f7280          MOV      r2,#0x100
00032e  2108              MOVS     r1,#8
000330  482b              LDR      r0,|L1.992|
000332  f7fffffe          BL       Can1DatasSend
;;;132    			start_cnt ++;
000336  4829              LDR      r0,|L1.988|
000338  7800              LDRB     r0,[r0,#0]  ; start_cnt
00033a  1c40              ADDS     r0,r0,#1
00033c  4927              LDR      r1,|L1.988|
00033e  7008              STRB     r0,[r1,#0]
                  |L1.832|
;;;133    		}
;;;134    		if(LED_CONTROL)
000340  4813              LDR      r0,|L1.912|
000342  6800              LDR      r0,[r0,#0]  ; Flagbits
000344  f3c040c0          UBFX     r0,r0,#19,#1
000348  b170              CBZ      r0,|L1.872|
;;;135    		{LED_CONTROL = 0;LED_ON;}	
00034a  4811              LDR      r0,|L1.912|
00034c  6800              LDR      r0,[r0,#0]  ; Flagbits
00034e  f4202000          BIC      r0,r0,#0x80000
000352  490f              LDR      r1,|L1.912|
000354  6008              STR      r0,[r1,#0]  ; Flagbits
000356  f04f7080          MOV      r0,#0x1000000
00035a  6a00              LDR      r0,[r0,#0x20]
00035c  2200              MOVS     r2,#0
00035e  2108              MOVS     r1,#8
000360  6803              LDR      r3,[r0,#0]
000362  480f              LDR      r0,|L1.928|
000364  4798              BLX      r3
000366  e00f              B        |L1.904|
                  |L1.872|
;;;136    		else
;;;137    		{LED_CONTROL = 1;LED_OFF;}	
000368  4809              LDR      r0,|L1.912|
00036a  6800              LDR      r0,[r0,#0]  ; Flagbits
00036c  f4202000          BIC      r0,r0,#0x80000
000370  f5002000          ADD      r0,r0,#0x80000
000374  4906              LDR      r1,|L1.912|
000376  6008              STR      r0,[r1,#0]  ; Flagbits
000378  f04f7080          MOV      r0,#0x1000000
00037c  6a00              LDR      r0,[r0,#0x20]
00037e  2208              MOVS     r2,#8
000380  4611              MOV      r1,r2
000382  6803              LDR      r3,[r0,#0]
000384  4806              LDR      r0,|L1.928|
000386  4798              BLX      r3
                  |L1.904|
;;;138    	}	
;;;139    }   
000388  bd10              POP      {r4,pc}
;;;140    
                          ENDP

00038a  0000              DCW      0x0000
                  |L1.908|
                          DCD      0x40030000
                  |L1.912|
                          DCD      Flagbits
                  |L1.916|
                          DCD      0x40005000
                  |L1.920|
                          DCD      Step_Num_Cur1
                  |L1.924|
                          DCD      0x40031000
                  |L1.928|
                          DCD      0x40007000
                  |L1.932|
                          DCD      Step_Num_Cur2
                  |L1.936|
                          DCD      0x40032000
                  |L1.940|
                          DCD      Timer2_cnt
                  |L1.944|
                          DCD      0x40006000
                  |L1.948|
                          DCD      M_ss_cnt1
                  |L1.952|
                          DCD      motor_ss1
                  |L1.956|
                          DCD      Fre_Fuzhi11
                  |L1.960|
                          DCD      Given_Fre1
                  |L1.964|
                          DCD      Fre_Fuzhi12
                  |L1.968|
                          DCD      M_ss_cnt2
                  |L1.972|
                          DCD      motor_ss2
                  |L1.976|
                          DCD      Fre_Fuzhi21
                  |L1.980|
                          DCD      Given_Fre2
                  |L1.984|
                          DCD      Fre_Fuzhi22
                  |L1.988|
                          DCD      start_cnt
                  |L1.992|
                          DCD      can1StartSend
                  |L1.996|
                          DCD      M1_state
                  |L1.1000|
                          DCD      M2_state

                          AREA ||.data||, DATA, ALIGN=1

                  Timer2_cnt
000000  0000              DCW      0x0000
                  start_cnt
000002  00                DCB      0x00
                  can1StartSend
000003  00                DCB      0x00
                          DCDU     0x00000000
000008  000000            DCB      0x00,0x00,0x00
